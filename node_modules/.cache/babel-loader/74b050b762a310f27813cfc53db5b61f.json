{"ast":null,"code":"import _regeneratorRuntime from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/src/containers/Stats.js\";\nimport React, { Component } from 'react';\nimport * as Chart from \"chart.js\";\nimport { connect } from 'react-redux';\nimport { Doughnut, HorizontalBar, Pie } from 'react-chartjs-2';\nimport * as actions from \"../actions\";\nimport * as Papa from 'papaparse';\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.stats.data,\n    plot: state.stats.plot,\n    list: state.list,\n    all: state\n  };\n}\n\nvar Stats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stats, _Component);\n\n  function Stats(props) {\n    var _this;\n\n    _classCallCheck(this, Stats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stats).call(this, props));\n\n    _this.returnTeam = function () {\n      return _this.props.plot.team;\n    };\n\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.props.loadData();\n\n              case 2:\n                // console.log(\"DATA: \" + JSON.stringify(this.props.data));\n                this.props.showStats(this.props.all);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col m12 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.list.item)), React.createElement(\"div\", {\n        className: \"col m6 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(HorizontalBar, {\n        height: 200,\n        data: {\n          labels: this.props.plot.team,\n          datasets: [{\n            label: this.props.list.item + ' of each team',\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: this.props.plot.values\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col m6 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        height: 250,\n        data: {\n          labels: this.props.plot.team,\n          datasets: [{\n            data: this.props.plot.values,\n            backgroundColor: ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b'],\n            hoverBackgroundColor: ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b']\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Stats;\n}(Component);\n\nexport default connect(mapStateToProps, actions)(Stats);","map":{"version":3,"sources":["/media/shubhamg931/New Volume/Internships/SocialCops/socialcops-assignment/src/containers/Stats.js"],"names":["React","Component","Chart","connect","Doughnut","HorizontalBar","Pie","actions","Papa","mapStateToProps","state","data","stats","plot","list","all","Stats","props","returnTeam","team","loadData","showStats","item","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as Chart from \"chart.js\";\nimport { connect } from 'react-redux'\nimport { Doughnut, HorizontalBar, Pie } from 'react-chartjs-2'\nimport * as actions from \"../actions\"\nimport * as Papa from 'papaparse'\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.stats.data,\n    plot: state.stats.plot,\n    list: state.list,\n    all: state\n  }\n}\n\n  class Stats extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  returnTeam = () => {\n    return this.props.plot.team;\n  }\n\n  async componentDidMount() {\n    await this.props.loadData()\n    // console.log(\"DATA: \" + JSON.stringify(this.props.data));\n    this.props.showStats(this.props.all)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col m12 s12\">\n            <h1>{this.props.list.item}</h1>\n          </div>\n          <div className=\"col m6 s12\">\n            <HorizontalBar\n              height={200} data={{\n              labels: this.props.plot.team,\n              datasets: [\n                {\n                  label: this.props.list.item + ' of each team',\n                  backgroundColor: 'rgba(255,99,132,0.2)',\n                  borderColor: 'rgba(255,99,132,1)',\n                  borderWidth: 1,\n                  hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                  hoverBorderColor: 'rgba(255,99,132,1)',\n                  data: this.props.plot.values\n                }\n              ]\n            }} />\n          </div>\n          <div className=\"col m6 s12\">\n            <Doughnut\n              height={250}\n              data={{\n              labels: this.props.plot.team,\n              datasets: [{\n                data: this.props.plot.values,\n                backgroundColor: [\n                  '#f44336',\n                  '#e91e63',\n                  '#9c27b0',\n                  '#673ab7',\n                  '#3f51b5',\n                  '#2196f3',\n                  '#03a9f4',\n                  '#00bcd4',\n                  '#009688',\n                  '#4caf50',\n                  '#8bc34a',\n                  '#cddc39',\n                  '#ffeb3b',\n                ],\n                hoverBackgroundColor: [\n                  '#f44336',\n                  '#e91e63',\n                  '#9c27b0',\n                  '#673ab7',\n                  '#3f51b5',\n                  '#2196f3',\n                  '#03a9f4',\n                  '#00bcd4',\n                  '#009688',\n                  '#4caf50',\n                  '#8bc34a',\n                  '#cddc39',\n                  '#ffeb3b',\n                ]\n              }]\n            }} />\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps, actions\n)(Stats)\n"]},"metadata":{},"sourceType":"module"}